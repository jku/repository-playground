name: 'Offline version bump'
description: 'Create signing events for offline signed metadata that is about to expire'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c

    - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435
      with:
        python-version: 3.11

    - run: pip install $GITHUB_ACTION_PATH/../../repo/
      shell: bash

    - name: Bump offline role versions
      id: offline-bump
      run: |
        git config user.name "Playground version bump"
        git config user.email 41898282+github-actions[bot]@users.noreply.github.com
        events=""

        for filename in metadata/*.json; do
          fname=$(basename $filename)
          rolename="${fname%.json}"
          if [ "$rolename" = "timestamp" -o "$rolename" = "snapshot" ]; then
            continue
          fi

          version=$(playground-bump-expiring "${rolename}")
          if git diff --exit-code --quiet; then
            echo $rolename is not expiring
            continue
          fi

          # If signing event (branch) exists, don't start another one
          signing_event="sign/${rolename}-v${version}"
          if git ls-remote --exit-code origin ${signing_event}; then
            echo "Signing event ${signing_event} already exists"
            git reset --hard HEAD
            continue
          fi

          # Start a signing event
          git commit -a -m "Periodic version bump for ${rolename}: version ${version}"
          git show
          git push origin HEAD:$signing_event

          events="${events} $signing_event"

          # reset to original commit (GITHUB_SHA)
          git reset --hard HEAD^
        done

        echo "events=${events}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Dispatch signing events
      if: steps.offline-bump.outputs.events != ''
      env:
        EVENTS: ${{ steps.offline-bump.outputs.events }}
      uses: actions/github-script@d556feaca394842dc55e4734bf3bb9f685482fa0
      with:
        script: |
          console.log('Dispatching events: ', process.env.EVENTS)
          process.env.EVENTS.trim().split(' ').forEach(event => {
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'signing-event.yml',
              ref: event,
            })
          })